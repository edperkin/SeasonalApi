// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace SeasonalApi.Migrations
{
    [DbContext(typeof(SeasonalDbContext))]
    partial class SeasonalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SeasonalApi.Models.Produce", b =>
                {
                    b.Property<int>("ProduceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProduceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProduceType")
                        .HasColumnType("integer");

                    b.HasKey("ProduceId");

                    b.ToTable("Produces");

                    b.HasData(
                        new
                        {
                            ProduceId = 1,
                            Name = "Apple",
                            ProduceType = 0
                        },
                        new
                        {
                            ProduceId = 2,
                            Name = "Carrot",
                            ProduceType = 1
                        },
                        new
                        {
                            ProduceId = 3,
                            Name = "Strawberry",
                            ProduceType = 0
                        });
                });

            modelBuilder.Entity("SeasonalApi.Models.Season", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SeasonId"));

                    b.Property<int>("ProduceId")
                        .HasColumnType("integer");

                    b.Property<int>("WeekOfYear")
                        .HasColumnType("integer");

                    b.HasKey("SeasonId");

                    b.HasIndex("ProduceId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            SeasonId = 1,
                            ProduceId = 1,
                            WeekOfYear = 10
                        },
                        new
                        {
                            SeasonId = 2,
                            ProduceId = 1,
                            WeekOfYear = 11
                        },
                        new
                        {
                            SeasonId = 3,
                            ProduceId = 2,
                            WeekOfYear = 20
                        },
                        new
                        {
                            SeasonId = 4,
                            ProduceId = 2,
                            WeekOfYear = 21
                        },
                        new
                        {
                            SeasonId = 5,
                            ProduceId = 3,
                            WeekOfYear = 22
                        },
                        new
                        {
                            SeasonId = 6,
                            ProduceId = 3,
                            WeekOfYear = 23
                        });
                });

            modelBuilder.Entity("SeasonalApi.Models.Season", b =>
                {
                    b.HasOne("SeasonalApi.Models.Produce", "Produce")
                        .WithMany("Seasons")
                        .HasForeignKey("ProduceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produce");
                });

            modelBuilder.Entity("SeasonalApi.Models.Produce", b =>
                {
                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
